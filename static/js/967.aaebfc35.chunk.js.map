{"version":3,"file":"static/js/967.aaebfc35.chunk.js","mappings":"8XAmHA,EA7FoB,WAClB,OAAwBA,EAAAA,EAAAA,WAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAgCF,EAAAA,EAAAA,UAAS,CAAEG,KAAM,GAAIC,OAAQ,KAA7D,eAAOC,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAMXC,EAAc,WAClBP,GAAQ,EACT,EASKQ,EAAoB,SAAAC,GACxBL,GAAY,kBAAKD,GAAN,cAAiBM,EAAMC,OAAOT,KAAOQ,EAAMC,OAAOC,QAC9D,EAmBD,OACE,4BACE,SAACC,EAAA,EAAD,CACEC,MAAM,UACN,aAAW,MACXC,QAzCa,WACjBd,GAAQ,EACT,EAwCKe,MAAO,CAAEC,UAAW,OAAQC,WAAY,QAJ1C,UAME,SAACC,EAAA,EAAD,OAEF,UAACC,EAAA,EAAD,CACEpB,KAAMA,EACNqB,QAASb,EACT,kBAAgB,oBAHlB,WAKE,SAACc,EAAA,EAAD,CAAaC,GAAG,oBAAhB,0BACA,UAACC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,wDAGA,SAACC,EAAA,EAAD,CACEC,WAAS,EACTC,OAAO,QACP1B,KAAK,OACL2B,MAAM,OACNC,KAAK,OACLC,WAAS,EACTC,SAAUvB,KAEZ,SAACiB,EAAA,EAAD,CACEE,OAAO,QACP1B,KAAK,SACL2B,MAAM,SACNC,KAAK,OACLC,WAAS,EACTC,SAAUvB,QAGd,UAACwB,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,CAAQnB,QAASP,EAAaM,MAAM,UAApC,qBAGA,SAACoB,EAAA,EAAD,CAAQnB,QAtEK,WACnB,IAAMoB,EAAO,CAAEjC,KAAME,EAASF,KAAMC,OAAQC,EAASD,QACrDG,GAAS8B,EAAAA,EAAAA,KAAW,kBAAKD,GAAN,IAAYZ,IAAIc,EAAAA,EAAAA,UACnCC,IAAAA,OAAAA,QAAwB,gBACxB9B,GACD,EAiEsCM,MAAM,UAArC,yBAOT,E,mBC/GYyB,EAAaC,EAAAA,GAAAA,IAAH,yF,GAMFA,EAAAA,GAAAA,MAAH,yL,mBCJLC,EAAe,SAAAC,GAAK,OAAIA,EAAMC,MAAV,EAEpBC,EAAkB,SAAAF,GAAK,OAAIA,EAAMG,SAASC,SAAnB,EAEvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMG,SAASG,KAAnB,EAEnBC,GAAwBC,EAAAA,EAAAA,IACnC,CAT4B,SAAAR,GAAK,OAAIA,EAAMG,SAASM,WAAnB,EAShBV,IACjB,SAACU,EAAaR,GACZ,OAAOQ,EAAYR,QAAO,SAAAS,GAAO,OAC/BA,EAAQlD,KAAKmD,cAAcC,SAASX,EAAOU,cADZ,GAGlC,ICSH,EAnBe,WACb,IAAM/C,GAAWC,EAAAA,EAAAA,MACXoC,GAASY,EAAAA,EAAAA,IAAYd,GAG3B,OACE,SAACF,EAAD,WACE,SAACb,EAAA,EAAD,CACEH,GAAG,iBACHM,MAAM,wBACN2B,QAAQ,WACRtD,KAAK,SACLU,MAAO+B,EACPX,SAVqB,SAAAyB,GAAC,OAAInD,GAASoD,EAAAA,EAAAA,GAAWD,EAAE9C,OAAOC,OAAjC,KAc7B,E,wCCYD,EA5BoB,SAAC,GAAyB,IAAvBW,EAAsB,EAAtBA,GAAIrB,EAAkB,EAAlBA,KAAMyD,EAAY,EAAZA,MACzBrD,GAAWC,EAAAA,EAAAA,MAOjB,OACE,SAACqD,EAAA,GAAD,CACErC,GAAIA,EACJsC,iBACE,SAACC,EAAA,EAAD,CAAYC,KAAK,MAAM,aAAW,SAAShD,QAT5B,WACnBT,GAAS0D,EAAAA,EAAAA,IAAczC,IACvBe,IAAAA,OAAAA,QAAA,kBAAmCpC,EAAnC,WACD,EAMK,UACE,SAAC+D,EAAA,EAAD,MAJN,UAQE,SAACC,EAAA,EAAD,CAAcC,QAAO,UAAKjE,EAAL,aAAcyD,MAGxC,ECFD,EAhBoB,WAClB,IAAMb,GAAYS,EAAAA,EAAAA,IAAYX,GACxBI,GAAQO,EAAAA,EAAAA,IAAYR,GACpBqB,GAAkBb,EAAAA,EAAAA,IAAYN,GAEpC,OACE,0BAC8B,IAA3BmB,EAAgBC,SAAgB,SAAC,EAAD,IAChCvB,IAAcE,IAAS,kDACvBoB,EAAgBE,KAAI,gBAAG/C,EAAH,EAAGA,GAAIrB,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACnB,SAAC,EAAD,CAAsBoB,GAAIA,EAAIrB,KAAMA,EAAMyD,MAAOxD,GAA/BoB,EADC,MAK1B,ECXD,EATqB,WACnB,OACE,4BACE,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,C","sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","redux/contacts/contacts-selectors.js","components/Filter/Filter.jsx","components/ContactList/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","views/ContactsView.jsx"],"sourcesContent":["// import { Formik } from 'formik';\n// import { Button, FormStyled, Input } from './ContactForm.styled';\nimport { useDispatch } from 'react-redux';\nimport Notiflix from 'notiflix';\n// import { selectContacts } from 'redux/contacts/contacts-selectors';\nimport { addContact } from 'redux/contacts/contacts-operation';\nimport { nanoid } from '@reduxjs/toolkit';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { useState } from 'react';\nimport { DialogContentText, Fab } from '@mui/material';\nimport { AddIcCallOutlined } from '@mui/icons-material';\n\n// const inithialValue = {\n//   name: '',\n//   number: '',\n// };\n\nconst ContactForm = () => {\n  const [open, setOpen] = useState(false);\n  const [formData, setFormData] = useState({ name: '', number: '' });\n  // const contactList = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleSubmit = () => {\n    const data = { name: formData.name, number: formData.number };\n    dispatch(addContact({ ...data, id: nanoid() }));\n    Notiflix.Notify.success('Add contacts');\n    handleClose();\n  };\n\n  const handleInputChange = event => {\n    setFormData({ ...formData, [event.target.name]: event.target.value });\n  };\n\n  // const handleSubmit = (value, { resetForm }) => {\n  //   const existingContact = contactList.some(\n  //     contact => contact.number === value.number\n  //   );\n\n  //   if (existingContact) {\n  //     Notiflix.Notify.failure(\n  //       `Ð¡ontact with number ${value.number} is already in contacts`\n  //     );\n  //   } else {\n  //     dispatch(addContact({ ...value, id: nanoid() }));\n  //     Notiflix.Notify.success('Add contacts');\n  //   }\n\n  //   resetForm();\n  // };\n\n  return (\n    <div>\n      <Fab\n        color=\"primary\"\n        aria-label=\"add\"\n        onClick={handleOpen}\n        style={{ marginTop: '20px', marginLeft: '20px' }}\n      >\n        <AddIcCallOutlined />\n      </Fab>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Add contact</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please enter your name and phone number.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            name=\"name\"\n            label=\"Name\"\n            type=\"text\"\n            fullWidth\n            onChange={handleInputChange}\n          />\n          <TextField\n            margin=\"dense\"\n            name=\"number\"\n            label=\"Number\"\n            type=\"text\"\n            fullWidth\n            onChange={handleInputChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default ContactForm;\n","import styled from \"styled-components\";\n\nexport const FilterForm = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n`\n\nexport const Input = styled.input`\n    padding: 4px;\n    width: 200px;\n    font-size: large;\n    outline: none;\n    border-radius: 8px;\n    :focus {\n        outline: 1px solid blue;\n    }\n`","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contactList;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contactList, filter) => {\n    return contactList.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { FilterForm } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilters } from 'redux/filtersSlice';\nimport { selectFilter } from 'redux/contacts/contacts-selectors';\nimport { TextField } from '@mui/material';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const handleChangeFilter = e => dispatch(setFilters(e.target.value));\n\n  return (\n    <FilterForm>\n      <TextField\n        id=\"outlined-basic\"\n        label=\"Find contacts by name\"\n        variant=\"outlined\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleChangeFilter}\n      />\n    </FilterForm>\n  );\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport Notiflix from 'notiflix';\nimport { deleteContact } from 'redux/contacts/contacts-operation';\nimport { IconButton, ListItem, ListItemText } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst ContactItem = ({ id, name, phone }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n    Notiflix.Notify.success(`Contact ${name} delete`);\n  };\n\n  return (\n    <ListItem\n      id={id}\n      secondaryAction={\n        <IconButton edge=\"end\" aria-label=\"delete\" onClick={handleDelete}>\n          <DeleteIcon />\n        </IconButton>\n      }\n    >\n      <ListItemText primary={`${name}: ${phone}`} />\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default ContactItem;\n","import Filter from 'components/Filter/Filter';\nimport ContactItem from './ContactItem';\nimport { useSelector } from 'react-redux';\nimport {\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from 'redux/contacts/contacts-selectors';\n\nconst ContactList = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul>\n      {visibleContacts.length !== 0 && <Filter />}\n      {isLoading && !error && <b>Request in progress...</b>}\n      {visibleContacts.map(({ id, name, number }) => (\n        <ContactItem key={id} id={id} name={name} phone={number} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\n\nconst ContactsView = () => {\n  return (\n    <div>\n      <ContactForm />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactsView;\n"],"names":["useState","open","setOpen","name","number","formData","setFormData","dispatch","useDispatch","handleClose","handleInputChange","event","target","value","Fab","color","onClick","style","marginTop","marginLeft","AddIcCallOutlined","Dialog","onClose","DialogTitle","id","DialogContent","DialogContentText","TextField","autoFocus","margin","label","type","fullWidth","onChange","DialogActions","Button","data","addContact","nanoid","Notiflix","FilterForm","styled","selectFilter","state","filter","selectIsLoading","contacts","isLoading","selectError","error","selectVisibleContacts","createSelector","contactList","contact","toLowerCase","includes","useSelector","variant","e","setFilters","phone","ListItem","secondaryAction","IconButton","edge","deleteContact","Delete","ListItemText","primary","visibleContacts","length","map"],"sourceRoot":""}